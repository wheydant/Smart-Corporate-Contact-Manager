spring.application.name=sccm

server.port=8081

# mySQL
#data source url
spring.datasource.url=jdbc:mysql://localhost:3306/sccm
spring.datasource.username=root
spring.datasource.password=root

#jpa configuration
    #Shows sql queries as we are learning to disable it when in production
spring.jpa.show-sql=true
    #If update is not set then schemas and tables wont be created
spring.jpa.hibernate.ddl-auto=update 
    #We have options like create, create-drop, validate etc.
    #Can use dialect which automatically creates queries for specified database like mySQL, OracleSQL, postgreesSQL. Important if for some reason springboot fails to understand usually it is handled automatically.
    #Can use format_sql for formated version which is basically to learn sql in depth


#Email

#Security Configuration

# spring.security.user.name=admin
# spring.security.user.password=admin

#OAuth2 configuration

#Google Configuration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.client-id=1014411463895-li8u6cc61o0prns110r7b0h23pkk3hki.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=email,profile

#Github Configuration
spring.security.oauth2.client.registration.github.client-name=github
spring.security.oauth2.client.registration.github.client-id=Iv23libnLcxXuIR67FWm
spring.security.oauth2.client.registration.github.client-secret=2a3a11287f0da01dca26323d18da5d13f44ab87a
spring.security.oauth2.client.registration.github.scope=email,profile

# cloudinary configuration

cloudinary.cloud.name=dthvvgqqd
cloudinary.api.key=652136649366569
cloudinary.api.secret=z1vrozidoQvt-fPjup7P8k36aKM